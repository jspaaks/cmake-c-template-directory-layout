name: dbg

on:
  pull_request:
  push:
    branches:
      - main

jobs:

  testing:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-2022' ]
        python-version: ['3.12']
    steps:

      - name: cmake --version
        run: cmake --version

      - if: matrix.os == 'ubuntu-24.04'
        name: (ubuntu-24.04) Install Criterion
        run: sudo apt-get install -y libcriterion-dev

      - if: matrix.os == 'macos-14'
        name: (macos-14) Install Criterion
        run: brew install criterion

      - if: matrix.os == 'windows-2022'
        name: (windows-2022) Install Criterion
        run: |
          choco install meson -y
          choco install ninja -y
          choco install mingw -y
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
          refreshenv
          meson --version
          ninja --version
          gcc --version
          Invoke-WebRequest -Uri https://github.com/Snaipe/Criterion/archive/refs/tags/v2.4.2.tar.gz -OutFile Criterion-2.4.2.tar.gz
          tar -xvf Criterion-2.4.2.tar.gz
          cd Criterion-2.4.2
          meson setup build .
          meson install -C build

      - if: matrix.os == 'windows-2022'
        name: (windows-2022) Allow long file names in git checkouts
        run: git config --system core.longpaths true

      - name: Get a copy of the repository contents
        uses: actions/checkout@v4

      - name: Build and run contents of dbg/navigator-project
        run: |
          $Env:CC='gcc'
          $Env:C_INCLUDE_PATH='C:\\include'
          $Env:LIBRARY_PATH='C:\\lib'
          $Env:CMAKE_GENERATOR='Unix Makefiles'
          cd dbg/navigator-project
          mkdir build
          cd build
          mkdir cmake
          cd cmake
          cmake ..\..
          cmake --build .
          cmake --install .
          echo "About to call navigator.exe"
          .\dist\bin\navigator.exe
          $Env:PATH += ';C:\\bin'
          echo "About to call test_operations.exe -j1 --verbose"
          .\dist\bin\test_operations.exe -j1 --verbose

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Python version
        run: |
          which python
          python --version

      - name: Upgrade pip, setuptools and wheel
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install the template with its testing dependencies
        run: python -m pip install .[testing]

      - if: matrix.os == 'ubuntu-24.04'
        name: (ubuntu-24.04) Run fuzzy tests
        run: NFUZZY=100 python -m pytest -ra --verbose

      - if: matrix.os == 'macos-14'
        name: (macos-14) Run fuzzy tests
        run: CC='gcc-14 -I/opt/homebrew/include -L/opt/homebrew/lib' NFUZZY=100 python -m pytest -ra --verbose

      - if: matrix.os == 'windows-2022'
        name: (windows-2022) Run fuzzy tests for a selection of C standards
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          $Env:NFUZZY = '2'
          $Env:C_INCLUDE_PATH='C:\\include'
          $Env:CC='gcc'
          $Env:CMAKE_C_STANDARDS='c_std_17'
          $Env:CMAKE_GENERATOR='Unix Makefiles'
          $Env:LIBRARY_PATH='C:\\lib'
          $Env:PATH += ';C:\\bin'
          python -m pytest -ra --verbose
