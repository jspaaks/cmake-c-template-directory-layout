name: dbg

on:
  push:
    branches:
      - main

jobs:

  testing:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'windows-2022' ]
        python-version: ['3.12']
    steps:

      - run: git config --system core.longpaths true

      - name: Get a copy of the repository contents
        uses: actions/checkout@v4

      - name: desperation
        run: |
          echo "$PWD"
          dir
          cd dbg\navigator-project
          mkdir build
          cd build
          mkdir cmake
          cd cmake
          cmake ..\..
          cmake --build .
          cmake --install .

      - name: desperation part deux
        run: |
          echo "$PWD"
          dir
          choco install meson -y
          choco install ninja -y
          choco install mingw -y
          echo "----------------------------------------------"
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
          refreshenv
          meson --version
          ninja --version
          gcc --version
          echo "----------------------------------------------"
          Invoke-WebRequest -Uri https://github.com/Snaipe/Criterion/archive/refs/tags/v2.4.2.tar.gz -OutFile Criterion-2.4.2.tar.gz
          tar -xvf Criterion-2.4.2.tar.gz
          cd Criterion-2.4.2
          meson setup build .
          meson install -C build
          cd ..
          echo "----------------------------------------------"
          $Env:CC='gcc'
          $Env:CMAKE_GENERATOR='Unix Makefiles'
          echo "$PWD"
          dir
          cd dbg\navigator-project\built\cmake
          cmake ..\..
          cmake --build .
          cmake --install .

      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python-version }}

      # - name: Python version
      #   run: |
      #     which python
      #     python --version

      # - name: (windows-2022) Run fuzzy tests for selected C standards
      #   run: |
      #     Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
      #     refreshenv
      #     python -m venv venv
      #     venv\Scripts\Activate.ps1
      #     python -m pip install --upgrade pip setuptools wheel
      #     python -m pip install .[testing]
      #     $Env:NFUZZY='100'
      #     $Env:CC='gcc'
      #     $Env:CMAKE_C_STANDARDS='c_std_17,c_std_11,c_std_99,c_std_90'
      #     $Env:CMAKE_GENERATOR='Unix Makefiles'
      #     python -m pytest -rA --verbose
      #     echo "::endgroup::"
