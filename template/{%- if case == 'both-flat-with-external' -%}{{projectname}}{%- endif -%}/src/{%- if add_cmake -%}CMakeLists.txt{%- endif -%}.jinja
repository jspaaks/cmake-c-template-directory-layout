cmake_minimum_required(VERSION 3.23...3.28)

set(PROJECT_ROOT ${CMAKE_CURRENT_LIST_DIR}/..)

if (NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Debug)
endif()

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set_property(CACHE CMAKE_INSTALL_PREFIX PROPERTY VALUE "${CMAKE_BINARY_DIR}/dist")
endif()

#
#
#

set(CMAKE_BUILD_WITH_INSTALL_RPATH ON)
if (APPLE)
    list(APPEND CMAKE_INSTALL_RPATH @loader_path/../lib)
elseif(UNIX)
    list(APPEND CMAKE_INSTALL_RPATH $ORIGIN/../lib)
endif()

add_executable(tgt_exe_{{ exename }})

set_property(TARGET tgt_exe_{{ exename }} PROPERTY OUTPUT_NAME {{ exename }})

target_compile_definitions(
    tgt_exe_{{ exename }}
    PRIVATE
        $<$<CONFIG:Debug>:DEBUG>
)

target_compile_features(
    tgt_exe_{{ exename }}
    PRIVATE
        {{ c_std }}
)

target_compile_options(
    tgt_exe_{{ exename }}
    PRIVATE
        -Wall
        -Wextra
        -pedantic
        $<$<CONFIG:Debug>:-g>
        $<$<CONFIG:Debug>:-O0>
        $<$<CONFIG:Release>:-Werror>
)

target_include_directories(
    tgt_exe_{{ exename }}
    PRIVATE
        ${PROJECT_ROOT}/include
)

target_link_libraries(
    tgt_exe_{{ exename }}
    PRIVATE
        m
        tgt_lib_{{ libname }}
)

target_sources(
    tgt_exe_{{ exename }}
    PRIVATE
        ${PROJECT_ROOT}/src/main.c
)

install(TARGETS tgt_exe_{{ exename }})

#
#
#

add_library(tgt_lib_{{ libname }} SHARED)

set_property(TARGET tgt_lib_{{ libname }} PROPERTY OUTPUT_NAME {{ libname }})

target_compile_definitions(
    tgt_lib_{{ libname }}
    PRIVATE
        $<$<CONFIG:Debug>:DEBUG>
)

target_compile_features(
    tgt_lib_{{ libname }}
    PRIVATE
        {{ c_std }}
)

target_compile_options(
    tgt_lib_{{ libname }}
    PRIVATE
        -Wall
        -Wextra
        -pedantic
        $<$<CONFIG:Debug>:-g>
        $<$<CONFIG:Debug>:-O0>
        $<$<CONFIG:Release>:-Werror>
)

target_include_directories(
    tgt_lib_{{ libname }}
    PRIVATE
        ${PROJECT_ROOT}/include
        ${PROJECT_ROOT}/{{ external_directory }}/their/include
)

target_link_libraries(
    tgt_lib_{{ libname }}
    PRIVATE
        tgt_lib_their
)

target_sources(
    tgt_lib_{{ libname }}
    PRIVATE
        ${PROJECT_ROOT}/src/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}addition.c
        ${PROJECT_ROOT}/src/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}division.c
        ${PROJECT_ROOT}/src/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}multiplication.c
        ${PROJECT_ROOT}/src/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}subtraction.c
    PUBLIC
        FILE_SET fset_lib_{{ libname }}_headers
        TYPE HEADERS
        BASE_DIRS
            ${PROJECT_ROOT}/include
        FILES
            ${PROJECT_ROOT}/include/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}addition.h
            ${PROJECT_ROOT}/include/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}division.h
            ${PROJECT_ROOT}/include/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}multiplication.h
            ${PROJECT_ROOT}/include/{% if prepend_filenames %}{{ libname + '_' }}{% endif %}subtraction.h
)

install(TARGETS tgt_lib_{{ libname }}
    LIBRARY
    FILE_SET fset_lib_{{ libname }}_headers
)
